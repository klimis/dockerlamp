#********************************************************************
#DEVELOPMENT ENVIRONMENT*********************************************
# Services, tools, volumes and networking all defined here.
# docker-compose up  -d to start them all
# use docker-compose.override.yml to add your custom configuration
#********************************************************************

version: '2'

services:
  haproxy:
    image: mylamp/haproxy
    links:
      - web:web
      - sql:sql
    ports:
      - "80:80"
      - "33306:33306"
      - "8282:8282"
    depends_on:
      - web
    restart: unless-stopped

  redis:
        image: mylamp/redis
        restart: unless-stopped
        ports:
          - "6379:6379"
        volumes_from:
          - redis-data-dev

  sql:
      image: mylamp/sql
      restart: unless-stopped
      image: 10.70.7.207:5000/dev/sql:5.7-0.4
      ports:
        - "3206:3306"
      volumes_from:
        - db-data-dev
      environment:
        MYSQL_ROOT_PASSWORD: 123


  web:
     image: mylamp/web
     ports:
       - "8080:8080"
     privileged: true
     links:
       - sql:sql
       - redis:redis

     volumes:
      - ${HTTPD_LOGPATH}:/var/log/apache2/
      - ${APACHE_HOSTS}:/etc/apache2/sites-enabled
      - ${WEB_VOLUMEPATH}:/var/www/
      - ${CANVAS_APP_LOGPATH}:/var/log/app
      - ${WEB_PROJECTASSETS}:/project_assets/
      - ${BASH_HISTORY}:/root/.bash_history

      - /var/run/docker.sock:/var/run/docker.sock


     environment:
      - XDEBUG_REMOTE_HOST=${XDEBUG_REMOTE_HOST}
     restart: unless-stopped



#volumes  **********************************************************************************************
  redis-data-dev:
    container_name: lamp-redis-data
    image: mylamp/busybox-private
    volumes:
      - ${REDIS_DATAPATH}:/var/lib/redis
  db-data-dev:
      image: mylamp/busybox-private
      container_name: lamp-db-data-dev
      volumes:
        - ${DB_DATAPATH}:/var/lib/mysql
#volumes end **********************************************************************************************

#tools **********************************************************************************************
  phpmyadmin-dev:
     image: phpmyadmin/phpmyadmin
     container_name: phpmyadmin-dev
     restart: unless-stopped
     ports:
      - 8085:80
     volumes:
      - ./conf/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
  portainer:
      image: portainer/portainer
      container_name: portainer
      ports:
        - "9005:9000"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
  phpredmin:
      image: sasanrose/phpredmin
      links:
        - redis:redis
      environment:
        - PHPREDMIN_DATABASE_REDIS_0_HOST=redis
      ports:
        - "9016:80"

  selenium:
    container_name: lamp-selenium
    image: elgalu/selenium
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - /dev/shm:/dev/shm
    privileged: true
    environment:
          - SELENIUM_HUB_PORT=4444
          - NOVNC=true

#  logrotate:
#      image:  10.70.7.207:5000/tools/logrotate:3.10.3
#      container_name: lamp-logrotate
#      volumes:
#        - /var/lib/docker/containers:/var/lib/docker/containers
#        - ${CANVAS_APP_LOGPATH}:/var/log/igc/app
#        - ${CANVAS_NODE_LOGPATH}:/var/log/igc/node
#        - ${HTTPD_LOGPATH}:/var/log/igc/apache
#        - ${CANVAS_APP_LOGPATH5}:/var/log/igc/app5
#        - ${HTTPD_LOGPATH5}:/var/log/igc/apache5
#      restart: always
#      environment:
#        - LOGS_DIRECTORIES=/var/lib/docker/containers
#        - ALL_LOGS_DIRECTORIES= /var/log/igc
#        - LOGROTATE_COPIES=4
#        - LOGROTATE_SIZE=10M
#        - LOGROTATE_INTERVAL=weekly
#        #- LOGROTATE_CRONSCHEDULE=*/60 * * * *
#        - LOGROTATE_PARAMETERS=v
#        - LOGROTATE_STATUSFILE=/logrotate-status/logrotate.status
#        - LOG_FILE=/logs/cron.log
#        - LOGROTATE_COMPRESSION=compress

#tools end **********************************************************************************************
