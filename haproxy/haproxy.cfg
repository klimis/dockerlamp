global


    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    #log         127.0.0.1 local2 info
    #log         127.0.0.1   local0 info
    #acl rule1  hdr_dom(host) -i www.host.com
    #use_backend backend_app if rule1

    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
    default-server init-addr last,libc,none


#Our Web App
frontend proxy
    bind 0.0.0.0:80
    mode http
    option http-server-close
    option forwardfor
    log global
    maxconn 200000 # total maximum connections, check ulimit as well
    timeout client 50s
    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_socket path_beg /socket
    use_backend backend_socket_io if is_socket
    default_backend webapp


backend webapp
	balance source
	mode http
	timeout http-keep-alive  40s
	server php web:8080 check


listen stats
	bind 0.0.0.0:8282
    mode http
    option httpchk
    balance roundrobin
    stats uri /
    stats refresh 10s
    stats realm Haproxy Statistics
    stats auth admin:admin

listen mysql-cluster
	bind 0.0.0.0:33306
    mode tcp
    #option mysql-check user healthUser
    server db1 sql:3306 check port 3306 inter 5000 rise 3 fall 3 maxconn 220




